// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UPXV.Data;

#nullable disable

namespace UPXV.Data.Migrations
{
    [DbContext(typeof(UPXV_Context))]
    [Migration("20250911233958_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("ItemTag", b =>
                {
                    b.Property<int>("ItemNid")
                        .HasColumnType("int");

                    b.Property<int>("TagsNid")
                        .HasColumnType("int");

                    b.HasKey("ItemNid", "TagsNid");

                    b.HasIndex("TagsNid");

                    b.ToTable("ItemTag");
                });

            modelBuilder.Entity("UPXV.Models.Consumable", b =>
                {
                    b.Property<int>("Nid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Nid"));

                    b.Property<int>("ItemNid")
                        .HasColumnType("int");

                    b.Property<double>("Quantity")
                        .HasColumnType("double");

                    b.Property<string>("Tid")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<int>("UnitNid")
                        .HasColumnType("int");

                    b.HasKey("Nid");

                    b.HasAlternateKey("Tid");

                    b.HasIndex("ItemNid");

                    b.HasIndex("UnitNid");

                    b.ToTable("Consumables");
                });

            modelBuilder.Entity("UPXV.Models.Item", b =>
                {
                    b.Property<int>("Nid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Nid"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Tid")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Nid");

                    b.HasAlternateKey("Tid");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("UPXV.Models.Patrimony", b =>
                {
                    b.Property<int>("Nid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Nid"));

                    b.Property<int>("ItemNid")
                        .HasColumnType("int");

                    b.Property<string>("RegisteredBy")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("RegisteredIn")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("StatusNid")
                        .HasColumnType("int");

                    b.Property<string>("Tid")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Nid");

                    b.HasAlternateKey("Tid");

                    b.HasIndex("ItemNid");

                    b.HasIndex("StatusNid");

                    b.ToTable("Patrimonies");
                });

            modelBuilder.Entity("UPXV.Models.Status", b =>
                {
                    b.Property<int>("Nid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Nid"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Tid")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Nid");

                    b.HasAlternateKey("Tid");

                    b.ToTable("Status");
                });

            modelBuilder.Entity("UPXV.Models.Tag", b =>
                {
                    b.Property<int>("Nid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Nid"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Tid")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Nid");

                    b.HasAlternateKey("Tid");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("UPXV.Models.Unit", b =>
                {
                    b.Property<int>("Nid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Nid"));

                    b.Property<string>("Abbreviation")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Tid")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Nid");

                    b.HasAlternateKey("Tid");

                    b.ToTable("Units");
                });

            modelBuilder.Entity("ItemTag", b =>
                {
                    b.HasOne("UPXV.Models.Item", null)
                        .WithMany()
                        .HasForeignKey("ItemNid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UPXV.Models.Tag", null)
                        .WithMany()
                        .HasForeignKey("TagsNid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UPXV.Models.Consumable", b =>
                {
                    b.HasOne("UPXV.Models.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemNid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UPXV.Models.Unit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitNid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("UPXV.Models.Patrimony", b =>
                {
                    b.HasOne("UPXV.Models.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemNid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UPXV.Models.Status", "Status")
                        .WithMany()
                        .HasForeignKey("StatusNid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("Status");
                });
#pragma warning restore 612, 618
        }
    }
}
